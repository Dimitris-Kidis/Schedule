// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TYPO.ApplicationCore.Domain;

#nullable disable

namespace ApplicationCore.Migrations
{
    [DbContext(typeof(TypoDbContext))]
    partial class TypoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApplicationCore.Domain.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5664), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ImageTitle = "https://typostorage.blob.core.windows.net/avatars/avatar0.png",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5668), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ImageTitle = "https://www.bing.com/images/search?view=detailV2&ccid=JtJaspHm&id=25BA92485437ADD293D9BBF75B532069F59D5076&thid=OIP.JtJaspHmOW0-1H3eitKsjAAAAA&mediaurl=https%3A%2F%2Fth.bing.com%2Fth%2Fid%2FR.26d25ab291e6396d3ed47dde8ad2ac8c%3Frik%3DdlCd9WkgU1v3uw%26riu%3Dhttp%253a%252f%252finaga-api.or.id%252fasset%252fbackend%252fupload%252ftheboard%252fBoD_no_photo_f2.jpg%26ehk%3DAJFE9VB1TP75iGSvo8dy3R7n%252f5U0gR0eb9p0xdoLR2M%253d%26risl%3D%26pid%3DImgRaw%26r%3D0&exph=520&expw=474&q=avatars+for+sites+woman&simid=608054944566876018&form=IRPRST&ck=0AEC1786E5825A9BBB8A870A4320126E&selectedindex=5&ajaxhist=0&ajaxserp=0&pivotparams=insightsToken%3Dccid_FbkxL9bA*cp_AD984D00405C718B3A6D04AD566BE045*mid_1999E3C273B3A08BFCB743F2AC51C281B030F9C9*simid_608014030705879451*thid_OIP.FbkxL9bAzFsI4gYWt1AU5AAAAA&vt=0&sim=11&iss=VSI&ajaxhist=0&ajaxserp=0",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5671), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ImageTitle = "https://www.bing.com/images/search?view=detailV2&ccid=0m3pRsk%2B&id=FC1097DBC6F62EFAC0C5DE41CF9CD5F4B41E1714&thid=OIP.0m3pRsk-byuSMJLki7OR4AHaIP&mediaurl=https%3A%2F%2Fwww.justwomanthings.com%2Fwp-content%2Fuploads%2F2017%2F10%2Ffavicon.png&exph=664&expw=597&q=avatars+for+sites+woman&simid=608018377213875942&form=IRPRST&ck=EAD721E1E55EB3116BF38FD907D672D5&selectedindex=2&ajaxhist=0&ajaxserp=0&pivotparams=insightsToken%3Dccid_JtJaspHm*cp_0AEC1786E5825A9BBB8A870A4320126E*mid_25BA92485437ADD293D9BBF75B532069F59D5076*simid_608054944566876018*thid_OIP.JtJaspHmOW0-1H3eitKsjAAAAA&vt=0&sim=11&iss=VSI&cdnurl=https%3A%2F%2Fth.bing.com%2Fth%2Fid%2FR.d26de946c93e6f2b923092e48bb391e0%3Frik%3DFBcetPTVnM9B3g%26pid%3DImgRaw%26r%3D0&ajaxhist=0&ajaxserp=0",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5673), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ImageTitle = "https://www.bing.com/images/search?view=detailV2&ccid=tvgdD7R%2B&id=DF7EF5F4FD90852E21CD80DBF8888274CE7D10D4&thid=OIP.tvgdD7R-dDF9jcxUcdt-mAHaHa&mediaurl=https%3A%2F%2Fcdn2.iconfinder.com%2Fdata%2Ficons%2Fpeppyicons%2F512%2Fwomen_red-512.png&exph=512&expw=512&q=avatars+for+sites+woman&form=IRPRST&ck=8C0B660E5459F765CCA7B23AACD5864B&selectedindex=5&ajaxhist=0&ajaxserp=0&pivotparams=insightsToken%3Dccid_0m3pRsk%252B*cp_EAD721E1E55EB3116BF38FD907D672D5*mid_FC1097DBC6F62EFAC0C5DE41CF9CD5F4B41E1714*simid_608018377213875942*thid_OIP.0m3pRsk-byuSMJLki7OR4AHaIP&vt=0&sim=11&iss=VSI&cdnurl=https%3A%2F%2Fth.bing.com%2Fth%2Fid%2FR.b6f81d0fb47e74317d8dcc5471db7e98%3Frik%3D1BB9znSCiPjbgA%26pid%3DImgRaw%26r%3D0",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5675), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ImageTitle = "https://www.bing.com/images/search?view=detailV2&ccid=k5drJ44P&id=EDE3CE4F8CE5BEA29C35E137AFC57576EEB40C36&thid=OIP.k5drJ44P_6vXHJjKuuTaYwHaHW&mediaurl=https%3a%2f%2flaunchwebsitedesign.com%2fwp-content%2fuploads%2f2017%2f09%2fjosh-d-avatar.jpg&cdnurl=https%3a%2f%2fth.bing.com%2fth%2fid%2fR.93976b278e0fffabd71c98cabae4da63%3frik%3dNgy07nZ1xa834Q%26pid%3dImgRaw%26r%3d0&exph=656&expw=661&q=avatars+for+sites&simid=607992242342948935&FORM=IRPRST&ck=9F5B9425E6390AD08E36568A701BC0A8&selectedIndex=0&ajaxhist=0&ajaxserp=0",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5678), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ImageTitle = "https://www.bing.com/images/search?view=detailV2&ccid=QXxS8HEX&id=652F714CDD9E207902418767156C2A75B8F1DB60&thid=OIP.QXxS8HEXoekXXLRo1BzwPAHaHa&mediaurl=https%3A%2F%2Fcdn4.iconfinder.com%2Fdata%2Ficons%2Fjetflat-2-people%2F60%2F005_036_woman_girl_user_human_avatar-512.png&exph=512&expw=512&q=avatars+for+sites+woman&form=IRPRST&ck=8227DE09D92787ADB2D381C3EA426A63&selectedindex=7&ajaxhist=0&ajaxserp=0&pivotparams=insightsToken%3Dccid_tvgdD7R%252B*cp_8C0B660E5459F765CCA7B23AACD5864B*mid_DF7EF5F4FD90852E21CD80DBF8888274CE7D10D4*thid_OIP.tvgdD7R-dDF9jcxUcdt-mAHaHa&vt=0&sim=11&iss=VSI&cdnurl=https%3A%2F%2Fth.bing.com%2Fth%2Fid%2FR.417c52f07117a1e9175cb468d41cf03c%3Frik%3DYNvxuHUqbBVnhw%26pid%3DImgRaw%26r%3D0",
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5681), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ImageTitle = "https://www.bing.com/images/search?view=detailV2&ccid=2n8TROKP&id=74C616EF6C56DCEDEF60D9B50077E10BA10320B0&thid=OIP.2n8TROKPogruE84yLS6_AwHaHa&mediaurl=https%3A%2F%2Fwww.cashygo.in%2Fstatic%2Fweb%2Fimages%2Fexecutive.png&cdnurl=https%3A%2F%2Fth.bing.com%2Fth%2Fid%2FR.da7f1344e28fa20aee13ce322d2ebf03%3Frik%3DsCADoQvhdwC12Q%26pid%3DImgRaw%26r%3D0&exph=512&expw=512&q=avatars+for+sites&form=IRPRST&ck=299DBFCAFF10B3D5A73A91EF93153F1D&selectedindex=2&ajaxhist=0&ajaxserp=0&pivotparams=insightsToken%3Dccid_k5drJ44P*cp_9F5B9425E6390AD08E36568A701BC0A8*mid_EDE3CE4F8CE5BEA29C35E137AFC57576EEB40C36*simid_607992242342948935*thid_OIP.k5drJ44P!_6vXHJjKuuTaYwHaHW&vt=0&sim=11&iss=VSI&ajaxhist=0&ajaxserp=0",
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5683), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ImageTitle = "https://www.bing.com/images/search?view=detailV2&ccid=iN2B0esp&id=A38E6B6419DCB48C099DF633ED08A32D6677EC8C&thid=OIP.iN2B0espKShXbt0BZmC_mwHaHa&mediaurl=https%3A%2F%2Fyt3.ggpht.com%2Fa%2FAATXAJwd0xEzFWMgYTJxhEzDgR2jsBhr38rVVYLGrA%3Ds900-c-k-c0xffffffff-no-rj-mo&cdnurl=https%3A%2F%2Fth.bing.com%2Fth%2Fid%2FR.88dd81d1eb292928576edd016660bf9b%3Frik%3DjOx3Zi2jCO0z9g%26pid%3DImgRaw%26r%3D0&exph=900&expw=900&q=avatars+for+sites&form=IRPRST&ck=89EE8126ADA32A92A48F04A90093C618&selectedindex=10&ajaxhist=0&ajaxserp=0&pivotparams=insightsToken%3Dccid_2n8TROKP*cp_299DBFCAFF10B3D5A73A91EF93153F1D*mid_74C616EF6C56DCEDEF60D9B50077E10BA10320B0*thid_OIP.2n8TROKPogruE84yLS6!_AwHaHa&vt=0&sim=11&iss=VSI&simid=608019931989018767&ajaxhist=0&ajaxserp=0",
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5686), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ImageTitle = "https://www.bing.com/images/search?view=detailV2&ccid=gUWziU4q&id=575E4366F81F16B6E1150B93A05A24C28C951F88&thid=OIP.gUWziU4qIlj65_ptewq-9gHaJH&mediaurl=https%3A%2F%2Fwww.netclipart.com%2Fpp%2Fm%2F324-3244180_clean-madurai-housekeeping-services-lady-icon-png.png&exph=1132&expw=920&q=avatars+for+sites+woman&form=IRPRST&ck=AA7620D583CFF2F9185EFFFBE6F8C2B1&selectedindex=22&ajaxhist=0&ajaxserp=0&pivotparams=insightsToken%3Dccid_QXxS8HEX*cp_8227DE09D92787ADB2D381C3EA426A63*mid_652F714CDD9E207902418767156C2A75B8F1DB60*thid_OIP.QXxS8HEXoekXXLRo1BzwPAHaHa&vt=0&sim=11&iss=VSI&cdnurl=https%3A%2F%2Fth.bing.com%2Fth%2Fid%2FR.8145b3894e2a2258fae7fa6d7b0abef6%3Frik%3DiB%252bVjMIkWqCTCw%26pid%3DImgRaw%26r%3D0&simid=607994102039707919",
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5688), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ImageTitle = "https://www.bing.com/images/search?view=detailV2&ccid=gQAod8xN&id=5C062313C68BB599A936E6DD7A9AC1661166D13A&thid=OIP.gQAod8xNTOJzbw4v5Y1iGwHaHa&mediaurl=https%3A%2F%2Fi.pinimg.com%2Foriginals%2F74%2Fda%2F07%2F74da07214279d76f9809b9c3943f23e6.png&exph=512&expw=512&q=avatars+for+sites+woman&form=IRPRST&ck=9E1ECE6649A7EFDF03D173C8E6E75746&selectedindex=11&ajaxhist=0&ajaxserp=0&pivotparams=insightsToken%3Dccid_QXxS8HEX*cp_8227DE09D92787ADB2D381C3EA426A63*mid_652F714CDD9E207902418767156C2A75B8F1DB60*thid_OIP.QXxS8HEXoekXXLRo1BzwPAHaHa&vt=0&sim=11&iss=VSI&cdnurl=https%3A%2F%2Fth.bing.com%2Fth%2Fid%2FR.81002877cc4d4ce2736f0e2fe58d621b%3Frik%3DOtFmEWbBmnrd5g%26pid%3DImgRaw%26r%3D0",
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5691), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ImageTitle = "https://www.bing.com/images/search?view=detailV2&ccid=ovgXQqWa&id=AB355EFFA65C532F535225C443639DD144DF6333&thid=OIP.ovgXQqWaC82lHgt2V2vxvQHaHa&mediaurl=https%3A%2F%2Fvectorified.com%2Fimage%2Fminimalist-vector-25.jpg&cdnurl=https%3A%2F%2Fth.bing.com%2Fth%2Fid%2FR.a2f81742a59a0bcda51e0b76576bf1bd%3Frik%3DM2PfRNGdY0PEJQ%26pid%3DImgRaw%26r%3D0&exph=600&expw=600&q=avatars+for+sites&form=IRPRST&ck=10855C420BF2DC89C6C6AA947D217B5C&selectedindex=3&ajaxhist=0&ajaxserp=0&pivotparams=insightsToken%3Dccid_iN2B0esp*cp_89EE8126ADA32A92A48F04A90093C618*mid_A38E6B6419DCB48C099DF633ED08A32D6677EC8C*simid_608019931989018767*thid_OIP.iN2B0espKShXbt0BZmC!_mwHaHa&vt=0&sim=11&iss=VSI&simid=607995094195911121&ajaxhist=0&ajaxserp=0",
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5693), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ImageTitle = "https://www.bing.com/images/search?view=detailV2&ccid=GSoBhvI8&id=1D47E63784BA983FC0BEA2430B49F43EFFAA5424&thid=OIP.GSoBhvI8pNCAp9E4GAJFIwHaHa&mediaurl=https%3A%2F%2Fcdn4.iconfinder.com%2Fdata%2Ficons%2Ffamous-character-vol-2-flat%2F48%2FAvatar_Famous_Characters-08-512.png&exph=512&expw=512&q=avatars+for+sites+woman&form=IRPRST&ck=4379DFD07D7557F3593324DBE13D5E6F&selectedindex=2&ajaxhist=0&ajaxserp=0&pivotparams=insightsToken%3Dccid_gQAod8xN*cp_9E1ECE6649A7EFDF03D173C8E6E75746*mid_5C062313C68BB599A936E6DD7A9AC1661166D13A*thid_OIP.gQAod8xNTOJzbw4v5Y1iGwHaHa&vt=0&sim=11&iss=VSI&cdnurl=https%3A%2F%2Fth.bing.com%2Fth%2Fid%2FR.192a0186f23ca4d080a7d13818024523%3Frik%3DJFSq%252fz70SQtDog%26pid%3DImgRaw%26r%3D0&simid=608047059002875774",
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5695), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ImageTitle = "https://www.bing.com/images/search?view=detailV2&ccid=UTiUwZi%2B&id=6DB608234240B457D5271CE6F4F7EE64990AE485&thid=OIP.UTiUwZi-5CWnxNtL6juk4QHaHa&mediaurl=https%3A%2F%2Fcdn3.iconfinder.com%2Fdata%2Ficons%2Favatars-collection%2F256%2F35-512.png&exph=512&expw=512&q=avatars+for+sites+woman&form=IRPRST&ck=1BEDCB9CA70115141BE0AF964A1B7F0E&selectedindex=2&ajaxhist=0&ajaxserp=0&pivotparams=insightsToken%3Dccid_GSoBhvI8*cp_4379DFD07D7557F3593324DBE13D5E6F*mid_1D47E63784BA983FC0BEA2430B49F43EFFAA5424*simid_608047059002875774*thid_OIP.GSoBhvI8pNCAp9E4GAJFIwHaHa&vt=0&sim=11&iss=VSI&cdnurl=https%3A%2F%2Fth.bing.com%2Fth%2Fid%2FR.513894c198bee425a7c4db4bea3ba4e1%3Frik%3DheQKmWTu9%252fTmHA%26pid%3DImgRaw%26r%3D0&simid=608055017578107125",
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5697), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ImageTitle = "https://www.bing.com/images/search?view=detailV2&ccid=xcUOt8Fa&id=FA221020C09F8D44E5FA6469ABDE90A35E306CC5&thid=OIP.xcUOt8FaKZgLEY3G3O0VlgHaHa&mediaurl=https%3A%2F%2Fcdn2.iconfinder.com%2Fdata%2Ficons%2Favatars-2-7%2F128%2F47-512.png&exph=512&expw=512&q=avatars+for+sites+woman&form=IRPRST&ck=F8412316D65B44228F183A4F546C0D97&selectedindex=3&ajaxhist=0&ajaxserp=0&pivotparams=insightsToken%3Dccid_UTiUwZi%252B*cp_1BEDCB9CA70115141BE0AF964A1B7F0E*mid_6DB608234240B457D5271CE6F4F7EE64990AE485*simid_608055017578107125*thid_OIP.UTiUwZi-5CWnxNtL6juk4QHaHa&vt=0&sim=11&iss=VSI&cdnurl=https%3A%2F%2Fth.bing.com%2Fth%2Fid%2FR.c5c50eb7c15a29980b118dc6dced1596%3Frik%3DxWwwXqOQ3qtpZA%26pid%3DImgRaw%26r%3D0&simid=608043257958332659",
                            UserId = 14
                        });
                });

            modelBuilder.Entity("ApplicationCore.Domain.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TextId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TextId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2177), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ReviewContent = "Content1",
                            TextId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2182), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ReviewContent = "Content2",
                            TextId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2185), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ReviewContent = "Content3",
                            TextId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2187), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ReviewContent = "Content4",
                            TextId = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2190), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ReviewContent = "Content5",
                            TextId = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2193), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ReviewContent = "Content6",
                            TextId = 6,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2195), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ReviewContent = "Content7",
                            TextId = 7,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2198), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ReviewContent = "Content8",
                            TextId = 8,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2200), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ReviewContent = "Content9",
                            TextId = 9,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2203), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ReviewContent = "Content10",
                            TextId = 10,
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2206), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ReviewContent = "Content11",
                            TextId = 11,
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2208), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ReviewContent = "Content12",
                            TextId = 12,
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2211), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ReviewContent = "Content13",
                            TextId = 13,
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2213), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            ReviewContent = "Content14",
                            TextId = 14,
                            UserId = 14
                        });
                });

            modelBuilder.Entity("ApplicationCore.Domain.Entities.Statistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("Accuracy")
                        .HasColumnType("real");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfMistakes")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SharedVia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SymbolsPerMinute")
                        .HasColumnType("real");

                    b.Property<int>("TextId")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TextId");

                    b.HasIndex("UserId");

                    b.ToTable("Statistics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Accuracy = 68.7f,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5558), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            NumberOfMistakes = 3,
                            SharedVia = "VK",
                            SymbolsPerMinute = 54f,
                            TextId = 1,
                            Time = "02:30",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Accuracy = 68.7f,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5563), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            NumberOfMistakes = 3,
                            SharedVia = "VK",
                            SymbolsPerMinute = 54f,
                            TextId = 2,
                            Time = "02:30",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Accuracy = 68.7f,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5565), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            NumberOfMistakes = 3,
                            SharedVia = "VK",
                            SymbolsPerMinute = 54f,
                            TextId = 3,
                            Time = "02:30",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Accuracy = 68.7f,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5568), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            NumberOfMistakes = 3,
                            SharedVia = "VK",
                            SymbolsPerMinute = 54f,
                            TextId = 4,
                            Time = "02:30",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Accuracy = 68.7f,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5570), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            NumberOfMistakes = 3,
                            SharedVia = "VK",
                            SymbolsPerMinute = 54f,
                            TextId = 5,
                            Time = "02:30",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Accuracy = 68.7f,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5574), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            NumberOfMistakes = 3,
                            SharedVia = "VK",
                            SymbolsPerMinute = 54f,
                            TextId = 6,
                            Time = "02:30",
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            Accuracy = 68.7f,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5576), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            NumberOfMistakes = 3,
                            SharedVia = "VK",
                            SymbolsPerMinute = 54f,
                            TextId = 7,
                            Time = "02:30",
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            Accuracy = 68.7f,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5579), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            NumberOfMistakes = 3,
                            SharedVia = "VK",
                            SymbolsPerMinute = 54f,
                            TextId = 8,
                            Time = "02:30",
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            Accuracy = 68.7f,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5581), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            NumberOfMistakes = 3,
                            SharedVia = "VK",
                            SymbolsPerMinute = 54f,
                            TextId = 9,
                            Time = "02:30",
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            Accuracy = 68.7f,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5585), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            NumberOfMistakes = 3,
                            SharedVia = "VK",
                            SymbolsPerMinute = 54f,
                            TextId = 10,
                            Time = "02:30",
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            Accuracy = 68.7f,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5588), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            NumberOfMistakes = 3,
                            SharedVia = "VK",
                            SymbolsPerMinute = 54f,
                            TextId = 11,
                            Time = "02:30",
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            Accuracy = 68.7f,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5590), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            NumberOfMistakes = 3,
                            SharedVia = "VK",
                            SymbolsPerMinute = 54f,
                            TextId = 12,
                            Time = "02:30",
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            Accuracy = 68.7f,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5611), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            NumberOfMistakes = 3,
                            SharedVia = "VK",
                            SymbolsPerMinute = 54f,
                            TextId = 13,
                            Time = "02:30",
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            Accuracy = 68.7f,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5614), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            NumberOfMistakes = 3,
                            SharedVia = "VK",
                            SymbolsPerMinute = 54f,
                            TextId = 14,
                            Time = "02:30",
                            UserId = 14
                        });
                });

            modelBuilder.Entity("ApplicationCore.Domain.Entities.StatisticsAVG", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<float>("AvgAccuracy")
                        .HasColumnType("real");

                    b.Property<float>("AvgSymbolsPerMin")
                        .HasColumnType("real");

                    b.Property<string>("AvgTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TextsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StatisticsAVG");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvgAccuracy = 57f,
                            AvgSymbolsPerMin = 32.43f,
                            AvgTime = "03:12",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2277), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            TextsCount = 21
                        },
                        new
                        {
                            Id = 2,
                            AvgAccuracy = 68f,
                            AvgSymbolsPerMin = 42.21f,
                            AvgTime = "02:48",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2282), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            TextsCount = 3
                        },
                        new
                        {
                            Id = 3,
                            AvgAccuracy = 78f,
                            AvgSymbolsPerMin = 55.01f,
                            AvgTime = "04:24",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2284), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            TextsCount = 32
                        },
                        new
                        {
                            Id = 4,
                            AvgAccuracy = 83f,
                            AvgSymbolsPerMin = 121.17f,
                            AvgTime = "03:04",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2287), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            TextsCount = 81
                        },
                        new
                        {
                            Id = 5,
                            AvgAccuracy = 67f,
                            AvgSymbolsPerMin = 45.91f,
                            AvgTime = "05:35",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2289), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            TextsCount = 17
                        },
                        new
                        {
                            Id = 6,
                            AvgAccuracy = 80f,
                            AvgSymbolsPerMin = 51.56f,
                            AvgTime = "03:00",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2292), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            TextsCount = 26
                        },
                        new
                        {
                            Id = 7,
                            AvgAccuracy = 61f,
                            AvgSymbolsPerMin = 48.42f,
                            AvgTime = "03:28",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2295), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            TextsCount = 6
                        },
                        new
                        {
                            Id = 8,
                            AvgAccuracy = 73f,
                            AvgSymbolsPerMin = 65.23f,
                            AvgTime = "06:27",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2297), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            TextsCount = 25
                        },
                        new
                        {
                            Id = 9,
                            AvgAccuracy = 72f,
                            AvgSymbolsPerMin = 54.25f,
                            AvgTime = "03:53",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2300), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            TextsCount = 43
                        },
                        new
                        {
                            Id = 10,
                            AvgAccuracy = 57f,
                            AvgSymbolsPerMin = 43.63f,
                            AvgTime = "03:03",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2303), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            TextsCount = 24
                        },
                        new
                        {
                            Id = 11,
                            AvgAccuracy = 79f,
                            AvgSymbolsPerMin = 67.56f,
                            AvgTime = "03:33",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2305), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            TextsCount = 58
                        },
                        new
                        {
                            Id = 12,
                            AvgAccuracy = 74f,
                            AvgSymbolsPerMin = 54.23f,
                            AvgTime = "02:09",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2308), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            TextsCount = 99
                        },
                        new
                        {
                            Id = 13,
                            AvgAccuracy = 62f,
                            AvgSymbolsPerMin = 34f,
                            AvgTime = "03:34",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2310), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            TextsCount = 51
                        },
                        new
                        {
                            Id = 14,
                            AvgAccuracy = 19f,
                            AvgSymbolsPerMin = 58.28f,
                            AvgTime = "04:39",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2313), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            TextsCount = 7
                        });
                });

            modelBuilder.Entity("ApplicationCore.Domain.Entities.Text", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("TextContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Texts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Author1",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2078), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "English",
                            Level = 4,
                            TextContent = "this is a simple found a monkey and a fox playing together they were so cute and i think that they were not supposed to be in the same cage but they someho"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Author1",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2088), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "English",
                            Level = 5,
                            TextContent = "this is a simple paragraph that is meant to be nice and easy to type which is why there will be mommas no periods or any capital letters so i guess this means that it cannot really be considered a paragraph but just a series of run on sentences this should help you get faster at typing as im trying not to use too many difficult words in it although i think that i might start making it hard by including some more difficult letters I'm typing pretty quickly so forgive me for any mistakes i think that i will not just tell you a story about the time i went to the zoo and found a monkey and a fox playing together they were so cute and i think that they were not supposed to be in the same cage but they someho"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Author3",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "Romanian",
                            Level = 4,
                            TextContent = "Orice persoana are dreptul la învăţătură. Invăţămîntul trebuie să fie gratuit, cel puţin în ceea ce priveşte invăţămîntul elementar şi general. Invăţămîntul elementar trebuie să fie obligatoriu. Invăţămîntul tehnic şi profesional trebuie să fie la îndemîna tuturor, iar învăţămîntul superior trebuie să fie de asemenea egal, accesibil tuturora, pe bază de merit."
                        },
                        new
                        {
                            Id = 4,
                            Author = "Author3",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2094), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "Romanian",
                            Level = 3,
                            TextContent = "Fiecare om are dreptul la ocrotirea intereselor morale şi materiale care decurg din orice lucrare ştiinţifică, literară sau artistică al cărei autor este."
                        },
                        new
                        {
                            Id = 5,
                            Author = "Author3",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2096), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "Romanian",
                            Level = 2,
                            TextContent = "Părinţii au dreptul de prioritate în alegerea felului de învăţămînt pentru copiii lor minori."
                        },
                        new
                        {
                            Id = 6,
                            Author = "Author1",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2100), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "English",
                            Level = 5,
                            TextContent = "Everyone has the right to education. Education shall be free, at least in the elementary and fundamental stages. Elementary education shall be compulsory. Technical and professional education shall be made generally available and higher education shall be equally accessible to all on the basis of merit."
                        },
                        new
                        {
                            Id = 7,
                            Author = "Author1",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2102), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "English",
                            Level = 3,
                            TextContent = "Everyone has the right freely to participate in the cultural life of the community, to enjoy the arts and to share in scientific advancement and its benefits."
                        },
                        new
                        {
                            Id = 8,
                            Author = "Author1",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2105), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "English",
                            Level = 2,
                            TextContent = "Parents have a prior right to choose the kind of education that shall be given to their children."
                        },
                        new
                        {
                            Id = 9,
                            Author = "Author1",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2108), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "English",
                            Level = 4,
                            TextContent = "Reading and comprehension are very important in Romanian. Once you're done with Romanian Reading, you might want to check the rest of our Romanian lessons here: Learn Romanian. Don't forget to bookmark this page."
                        },
                        new
                        {
                            Id = 10,
                            Author = "Author1",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2111), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "English",
                            Level = 1,
                            TextContent = "The links above are only a small sample of our lessons, please open the left side menu to see all links."
                        },
                        new
                        {
                            Id = 11,
                            Author = "Author2",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2113), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "Russian",
                            Level = 4,
                            TextContent = "Колобок полежал, полежал, взял да и покатился — с окна на лавку, с лавки на пол, по полу к двери, прыг через порог — да в сени, из сеней на крыльцо, с крыльца на двор, со двора за ворота, дальше и дальше."
                        },
                        new
                        {
                            Id = 12,
                            Author = "Author2",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2116), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "Russian",
                            Level = 5,
                            TextContent = "Затрещал теремок, упал набок и весь развалился. Еле-еле успели из него выскочить мышка-норушка, лягушка-квакушка, зайчик-побегайчик, лисичка-сестричка, волчок-серый бочок — все целы и невредимы."
                        },
                        new
                        {
                            Id = 13,
                            Author = "Author2",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2119), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "Russian",
                            Level = 3,
                            TextContent = "Волку делать нечего. Пошел он в кузницу и велел себе горло перековать, чтоб петь тонюсеньким голосом. Кузнец ему горло перековал. Волк опять побежал к избушке и спрятался за куст."
                        },
                        new
                        {
                            Id = 14,
                            Author = "Author2",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(2121), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "Russian",
                            Level = 5,
                            TextContent = "Три медведя — сказка о девочке, которая заблудилась в лесу и попала в домик медведей. Там она повела себя очень невоспитанно: без разрешения поела из каждой чашки, посидела на каждом стульчике, полежала в каждой кроватке, что очень разозлило вернувшихся домой медведей. Сказка представлена в изложении Л.Н. Толстого."
                        });
                });

            modelBuilder.Entity("ApplicationCore.Domain.Entities.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("SignUpAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThemeColors")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(1923), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "English",
                            SignUpAt = new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Local).AddTicks(1887)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(1950), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "Russian",
                            SignUpAt = new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Local).AddTicks(1949)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(1954), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "English",
                            SignUpAt = new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Local).AddTicks(1953)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(1957), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "Russian",
                            SignUpAt = new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Local).AddTicks(1956)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(1961), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "English",
                            SignUpAt = new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Local).AddTicks(1960)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(1965), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "Russian",
                            SignUpAt = new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Local).AddTicks(1964)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(1968), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "Romanian",
                            SignUpAt = new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Local).AddTicks(1967)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(1971), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "Russian",
                            SignUpAt = new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Local).AddTicks(1970)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(1974), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "Russian",
                            SignUpAt = new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Local).AddTicks(1973)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(1978), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "English",
                            SignUpAt = new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Local).AddTicks(1977)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(1982), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "English",
                            SignUpAt = new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Local).AddTicks(1981)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(1985), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "Russian",
                            SignUpAt = new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Local).AddTicks(1984)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(1988), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "English",
                            SignUpAt = new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Local).AddTicks(1987)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(1992), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Language = "Romanian",
                            SignUpAt = new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Local).AddTicks(1991)
                        });
                });

            modelBuilder.Entity("TYPO.ApplicationCore.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Age = 22,
                            ConcurrencyStamp = "5f9d19a6-65b1-40e8-938b-08c6a3f87030",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5350), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Email = "admin@admin.com",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            Gender = "M",
                            IsAdmin = true,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            Password = "adminadmin",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            Age = 23,
                            ConcurrencyStamp = "09e05d3b-a0a0-4252-a216-00a9811a2890",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5370), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Email = "dinalups@google.com",
                            EmailConfirmed = false,
                            FirstName = "Dina",
                            Gender = "F",
                            IsAdmin = false,
                            LastName = "Lupsha",
                            LockoutEnabled = false,
                            Password = "32rg342k3",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            Age = 25,
                            ConcurrencyStamp = "aef1e644-2f5e-4083-ada7-1dbf46799dae",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5386), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Email = "lenkapenka@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Elena",
                            Gender = "F",
                            IsAdmin = false,
                            LastName = "Yarynych",
                            LockoutEnabled = false,
                            Password = "vvkkkdan",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            Age = 31,
                            ConcurrencyStamp = "f9c00313-5b54-4ae5-8253-25ac8c5e28df",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5391), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Email = "svetkach@mail.ru",
                            EmailConfirmed = false,
                            FirstName = "Svetlana",
                            Gender = "F",
                            IsAdmin = false,
                            LastName = "Soltic",
                            LockoutEnabled = false,
                            Password = "chuwinss",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            Age = 41,
                            ConcurrencyStamp = "01b92d57-7f2c-48b3-a19a-e285112a4a8d",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5395), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Email = "vasssty@google.com",
                            EmailConfirmed = false,
                            FirstName = "Igor",
                            Gender = "M",
                            IsAdmin = false,
                            LastName = "Ejov",
                            LockoutEnabled = false,
                            Password = "ejejejeje",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "f8bba011-61cc-48a4-a00d-e0b66d62bf48",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5401), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Email = "nastinasti@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Anastasia",
                            Gender = "F",
                            IsAdmin = false,
                            LastName = "Pantelei",
                            LockoutEnabled = false,
                            Password = "barbarbar",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            Age = 45,
                            ConcurrencyStamp = "05684f37-a7dd-4bf0-8d0e-f95ef0006777",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5405), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Email = "sergosergo@simpals.md",
                            EmailConfirmed = false,
                            FirstName = "Serghei",
                            Gender = "M",
                            IsAdmin = false,
                            LastName = "Romanenco",
                            LockoutEnabled = false,
                            Password = "barbarbar",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            Age = 30,
                            ConcurrencyStamp = "f171f120-5ed4-422f-96e8-2409089f70c2",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5409), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Email = "ivaia@google.com",
                            EmailConfirmed = false,
                            FirstName = "Ivan",
                            Gender = "M",
                            IsAdmin = false,
                            LastName = "Veselov",
                            LockoutEnabled = false,
                            Password = "veseloveselo",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            Age = 36,
                            ConcurrencyStamp = "eb92eef9-3035-4198-a1f4-2fcbcb6abb18",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5413), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Email = "serenawww@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Serena",
                            Gender = "F",
                            IsAdmin = false,
                            LastName = "Williams",
                            LockoutEnabled = false,
                            Password = "tennistennis",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            Age = 41,
                            ConcurrencyStamp = "f3acfdb4-dfc1-41cb-a481-aa8b5fa6f118",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5419), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Email = "nadinadi@mail.ru",
                            EmailConfirmed = false,
                            FirstName = "Nadejda",
                            Gender = "F",
                            IsAdmin = false,
                            LastName = "Romanenco",
                            LockoutEnabled = false,
                            Password = "habibihabibi",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            Age = 24,
                            ConcurrencyStamp = "ded7f47e-52f9-4724-8678-14e574085183",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5425), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Email = "ionvasisis@google.com",
                            EmailConfirmed = false,
                            FirstName = "Ivan",
                            Gender = "M",
                            IsAdmin = false,
                            LastName = "Vasilashco",
                            LockoutEnabled = false,
                            Password = "internintern",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "5f83da96-4a94-40ee-8e16-066287dddece",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5429), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Email = "yankinan@google.com",
                            EmailConfirmed = false,
                            FirstName = "Anastasia",
                            Gender = "F",
                            IsAdmin = false,
                            LastName = "Yankina",
                            LockoutEnabled = false,
                            Password = "photophoto",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            Age = 22,
                            ConcurrencyStamp = "7ac7378c-72cb-45b8-8de4-1ba8e924a1f8",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5433), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Email = "adriadri@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Adriana",
                            Gender = "F",
                            IsAdmin = false,
                            LastName = "Rindunica",
                            LockoutEnabled = false,
                            Password = "ffwf43rf4",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            Age = 22,
                            ConcurrencyStamp = "07109412-a265-4d48-8839-ddb9d9021aa3",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 11, 10, 22, 2, 21, 57, DateTimeKind.Unspecified).AddTicks(5438), new TimeSpan(0, 2, 0, 0, 0)),
                            CreatedBy = "Seed",
                            Email = "ponama@mail.ru",
                            EmailConfirmed = false,
                            FirstName = "Daria",
                            Gender = "F",
                            IsAdmin = false,
                            LastName = "Ponomarenko",
                            LockoutEnabled = false,
                            Password = "artartart",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("ApplicationCore.Domain.Entities.Image", b =>
                {
                    b.HasOne("TYPO.ApplicationCore.Domain.Entities.User", "User")
                        .WithMany("Images")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Entities.Review", b =>
                {
                    b.HasOne("ApplicationCore.Domain.Entities.Text", "Text")
                        .WithMany("Reviews")
                        .HasForeignKey("TextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TYPO.ApplicationCore.Domain.Entities.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Text");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Entities.Statistics", b =>
                {
                    b.HasOne("ApplicationCore.Domain.Entities.Text", "Text")
                        .WithMany("Statistics")
                        .HasForeignKey("TextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TYPO.ApplicationCore.Domain.Entities.User", "User")
                        .WithMany("Statistics")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Text");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Entities.StatisticsAVG", b =>
                {
                    b.HasOne("TYPO.ApplicationCore.Domain.Entities.User", "User")
                        .WithOne("StatisticsAVG")
                        .HasForeignKey("ApplicationCore.Domain.Entities.StatisticsAVG", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Entities.UserInfo", b =>
                {
                    b.HasOne("TYPO.ApplicationCore.Domain.Entities.User", "User")
                        .WithOne("UserInfo")
                        .HasForeignKey("ApplicationCore.Domain.Entities.UserInfo", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Entities.Text", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("Statistics");
                });

            modelBuilder.Entity("TYPO.ApplicationCore.Domain.Entities.User", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Reviews");

                    b.Navigation("Statistics");

                    b.Navigation("StatisticsAVG")
                        .IsRequired();

                    b.Navigation("UserInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
